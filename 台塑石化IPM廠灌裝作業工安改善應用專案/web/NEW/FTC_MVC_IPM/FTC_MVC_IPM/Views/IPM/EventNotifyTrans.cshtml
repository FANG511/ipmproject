
@{
    ViewBag.Title = "EventNotifyTrans";
    Layout = "~/Views/Shared/_LayoutForMESNoMenu.cshtml";
}


<style>
    div.k-calendar-view a.k-link {
        font-size: 14px;
    }

    .container {
        display: flex;
        flex-direction: column;
        font-family: "標楷體", sans-serif;
        font-weight: bold;
    }

    .box {
        margin-top: 0px;
        margin-right: 0px;
        margin-bottom: 20px;
        margin-left: 0px;
    }

    .tall {
        height: 1000px;
    }

    .k-chart {
        width: 400px;
        height: 400px;
        float: left;
    }

    .k-grid th.k-header {
        text-align: center;
    }

    .k-grid-content {
        text-align: center;
    }

    .k-grid-footer {
        text-align: center;
    }

    #grid > table {
        table-layout: fixed;
    }

    .k-widget.k-multiselect {
        width: 200px;
        vertical-align: middle;
        display: inline-block;
    }

    .k-link {
        font-family: "標楷體", sans-serif;
        font-size: 16px;
        font-weight: bold;
    }

    .btn {
        font-family: "標楷體", sans-serif;
        font-size: 14px;
        font-weight: bold;
    }

    .form-group {
        margin-bottom: 5px;
    }

    .my-div {
        text-decoration: none;
    }

        .my-div:hover {
            text-decoration: underline;
        }
    /*解決sweetalert被popup出來的視窗遮住問題(back screen)*/
    .swal-overlay {
        z-index: 20001
    }
    /*解決sweetalert被popup出來的視窗遮住問題(對話框部分)*/
    .swal-modal {
        z-index: 20002
    }

   /* 定義傳送按鈕*/
    .crud_send {
        background-color: #4c567d;
        color: white;
        width: 23px;
    }
    .crud.crud_send:not([disabled]):hover, .btn_third:not([disabled]):hover {
        border-radius: 50%;
        background: #3b345f;
        color: #efeeee;
        top: 0.1em;
        box-shadow: 0 0.3em #808080, 0 0.1em rgba(100%, 0%, 0%, 0.4);
    }
    .fa {
        width: 22px;
    }
</style>
<div class="form-horizontal">
    <div class="title"></div>
    <div class="form-group">
        <div class="col-sm-12">
            <button class="btn btn_primary" id="readGrid" onclick="readGrid();">
                <i class="k-icon k-i-search"></i>
                <span data-i18n="FtcWISEDevice.Text.Query" style="float: left; font-size: 16px; font-weight: bolder;"></span>
            </button>
        </div>
    </div>
    <div class="box box-warning box-solid" style="border-color:black;">
        <div class="box-header with-border" id="FilterCondition">
            <span class="box-title">篩選條件</span>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" onclick="setGrid(this)">
                    <i class="k-icon k-i-minus"></i>
                </button>
            </div>
        </div>
        <div class="box-body" style="border-color:black; border-width:2px;">
            <div class="form-row">
                <div class="col-sm-12">
                    <label for="EventBaseName" style="float:left; font-size:14px; font-weight:bold;">
                        <span data-i18n="EventNotifyTrans.Text.EventBaseName"></span>
                        <input id="ddlEventBaseName" style="width: 300px;"/>
                    </label>
                </div> 

            
            </div>
            <br/><br />
                 <div class="form-row">
                     <div class="col-md-5">
                         <label for="StartDate" style="float:left; font-size:14px; font-weight:bold;">
                             <span data-i18n="EventNotifyTrans.Text.StartDate"></span>
                             <input id="start_datepicker" />
                         </label>
                     </div>
                     <div class="col-md-5">
                         <label for="EndDate" style="float:left; font-size:14px; font-weight:bold;">
                             <span data-i18n="EventNotifyTrans.Text.EndDate"></span>
                             <input id="end_datepicker" />
                         </label>
                     </div>          
                 </div>
        </div>
    </div>


    <!--Grid資料表-->
    <div class="form-group">
        <div class="col-sm-12">
            <div id="grid" style="width: 100%; height: 500px;"></div>
        </div>
    </div>
</div>
<script id="EventNotifyTransSetting" type="text/x-kendo-template">
    <table class="table table-sm" style="width: 100%;">
     @*事件名稱*@
      <tr>
            <td style="padding-left: 1em; vertical-align: middle; text-align: right;" nowrap="nowrap">
                <label for="ENTEventBaseName" data-i18n="EventNotifyTrans.Text.EventBaseName"></label>
            </td>
            <td style="padding-left: 1em;" nowrap="nowrap">
                <input type="text" class="k-textbox" name="ENTEventBaseName" id="ENTEventBaseName" style="width:20em;" readonly>
            </td>
        </tr>

    @*發生時間*@
        <tr>
            <td style="padding-left: 1em; vertical-align: middle; text-align: right;" nowrap="nowrap">
                <label for="ENTCreateDate" data-i18n="EventNotifyTrans.Text.CreateDate"></label>
            </td>
            <td style="padding-left: 1em;" nowrap="nowrap">
                <input type="text" class="k-textbox" name="ENTCreateDate" id="ENTCreateDate" style="width:20em;" readonly>
            </td>
        </tr>
    @*通知狀態*@
        <tr>
            <td style="padding-left: 1em; vertical-align: middle; text-align: right;" nowrap="nowrap">
                <label for="ENTNotifiedStatus" data-i18n="EventNotifyTrans.Text.Notified"></label>
            </td>
            <td style="padding-left: 1em;" nowrap="nowrap">
                <input type="text" class="k-textbox" name="ENTNotifiedStatus" id="ENTNotifiedStatus" style="width:20em;" readonly>
            </td>
        </tr>
    @*通知群組*@
        <tr>
            <td style="padding-left: 1em; vertical-align: middle; text-align: right;" nowrap="nowrap">
                <label for="ENTNotifyGroup" data-i18n="EventNotifyTrans.Text.NotifyGroup"></label>
            </td>
            <td style="padding-left: 1em;" nowrap="nowrap">
                <input type="text" class="k-textbox" name="ENTNotifyGroup" id="ENTNotifyGroup" style="width:20em;" readonly>
            </td>
        </tr>
    @*通知方式*@
        <tr>
            <td style="padding-left: 1em; vertical-align: middle; text-align: right;" nowrap="nowrap">
                <label for="ENTNotifyMethod" data-i18n="EventNotifyTrans.Text.NotifyMethod"></label>
            </td>
            <td style="padding-left: 1em;" nowrap="nowrap">
                <input type="text" class="k-textbox" name="ENTNotifyMethod" id="ENTNotifyMethod" style="width:20em;" readonly>
            </td>
        </tr>
    @*通知時間*@
        <tr>
            <td style="padding-left: 1em; vertical-align: middle; text-align: right;" nowrap="nowrap">
                <label for="ENTModifyDate" data-i18n="EventNotifyTrans.Text.ModifyDate">j</label>
            </td>
            <td style="padding-left: 1em;" nowrap="nowrap">
                <input type="text" class="k-textbox" name="ENTModifyDate" id="ENTModifyDate" style="width:20em;" readonly>
            </td>
        </tr>
    </table>
</script>
<script>
    const vi18n_Name = 'EventNotifyTrans.Text';
    var oDataModels_Edit = {};
    var grid;
    //表格資料
    var remoteDataSource;

    $(document).ready(function () {
        QueryString.Initial();
        InitialData();  // 確保資料來源首先被配置  
        InitialDate();  // 篩選條件日期
        InitialDropDownList(); // 篩選條件下拉式選單
        InitialGrid();  // 在資料來源配置後初始化表格
    });

@* --------------------------------------------------------------定義區 Kendo物件等-------------------------------------------------------------- *@
    //初始化資料
    function InitialData() {
        remoteDataSource = new kendo.data.DataSource({
            batch: true,
            transport: {
                read: {
                    url: WebApiUrl_Comm + "/GetEventNotifyTransDetail",
                    async: false,
                    dataType: "json",
                    type: "Post"
                },
                parameterMap: function (options, operation) {//狀態判斷，非讀取則指定模型之狀態
                    oDataModels_Edit["MODIFYUSER"] = MODIFYUSER;
                    oDataModels_Edit["CompanyID"] = CompanyID;
                    oDataModels_Edit["FactoryID"] = FactoryID;
                    oDataModels_Edit["sEventBaseSysIdList"] = $("#ddlEventBaseName").data("kendoMultiSelect").value();
                    oDataModels_Edit["sStartDate"] = $('#start_datepicker').val();
                    oDataModels_Edit["sEndDate"] = $('#end_datepicker').val();
                    return oDataModels_Edit;
                }
            },

            pageSize: 10,

            schema: {
                //API回傳的資料
                parse: function (data) {

                    if (data.length == 1) {
                        //執行失敗
                        if (data[0].ReturnCode != 0) {
                            FtcAlert(data[0].ReturnMessage);
                            return [];
                        }
                    }
                    else {
                        //執行成功
                        if (data[1].ReturnCode != 0) {
                            return [];
                        } else {
                            return data[0];
                        }
                    }
                },
                model: {
                    //id屬性指定了數據模型中的一個字段，用於唯一標識每一條記錄
                    //透過此id可辨識要刪除或更新的row
                    id: "EventSysId",
                    fields: {
                        EventSysId: { validation: { required: true } },
                        Notified: { validation: { required: true } },
                        NotifiedStatus: { validation: { required: true } },
                        NotifyGroup: { validation: { required: true } },
                        NotifyMethod: { validation: { required: true } },
                        CreateUser: { validation: { required: true } },
                        CreateDate: { type: "date", validation: { required: true } },
                        ModifyUser: { validation: { required: true } },
                        ModifyDate: { type: "date", validation: { required: true } },
                        EventBaseName: { validation: { required: true } }
                    }
                }
            },

            //資料請求完成後觸發
            requestEnd: function (e) {
                var response = e.response;
                var type = e.type;

                if (type != 'read') {
                    remoteDataSource.read();
                }

            }
        });
    }
    function InitialDate() {
        $("#start_datepicker").kendoDatePicker({
            format: "yyyy/MM/dd",
            value: null,
            change: function (e) {
                var selectedDate = this.value();
                if (selectedDate) {
                    var maxDate = new Date(selectedDate);
                    //結束日期最大最小值設定
                    $("#end_datepicker").data("kendoDatePicker").max(new Date());
                    $("#end_datepicker").data("kendoDatePicker").min(new Date(selectedDate));
                }
            }
        });

        $("#end_datepicker").kendoDatePicker({
            format: "yyyy/MM/dd",
            value: null,
        });
    }
    function InitialDropDownList() {
        ddlEventBaseName = $("#ddlEventBaseName").kendoMultiSelect({
            dataSource: ddlEventBaseName_Data(),
            dataTextField: "EventBaseName",
            dataValueField: "EventBaseSysId",
            placeholder: "---請選擇事件名稱---",
            downArrow: true,
        });
    }
    function InitialGrid() {
        grid = $("#grid").kendoGrid({
            dataSource: remoteDataSource,
            pageable: {
                refresh: true,
                pageSize: 10,
                buttonCount: 5//頁碼數量
            },
            resizable: true,
            sortable: true, //欄位排序
            height: 600,
            scrollable: {
                virtual: true
            },
            editable: {
                mode: "popup",
                template: kendo.template($("#EventNotifyTransSetting").html()),
            },

            columns: [
                {
                    command: [
                        {
                            name: "edit",
                            template: "<a class='crud crud_edit k-grid-edit'><i class='fa fa-file-alt'></i></a>&nbsp",
                            click: SetMainData
                        },
                        {
                            name: "send", 
                            template: "<div onclick='SendNotify($(this))'<a class='crud crud_send'><i class='fa fa-paper-plane'></i></a></div>"
                        }
                    ],
                    width: "80px",
                },

                { field: "EventBaseName", title: i18n.t(vi18n_Name + '.EventBaseName'), width: "100px" },
                { field: "CreateDate", title: i18n.t(vi18n_Name + '.CreateDate'), width: "160px", format: "{0: yyyy/MM/dd HH:mm:ss}"},
                { field: "NotifiedStatus", title: i18n.t(vi18n_Name + '.Notified'), width: "100px" },
                { field: "NotifyGroup", title: i18n.t(vi18n_Name + '.NotifyGroup'), width: "100px" },
                { field: "NotifyMethod", title: i18n.t(vi18n_Name + '.NotifyMethod'), width: "100px" },
                { field: "ModifyDate", title: i18n.t(vi18n_Name + '.ModifyDate'), width: "160px", format: "{0: yyyy/MM/dd HH:mm:ss}" }
            ],

            edit: function (e) {
                //定義編輯視窗標題
                e.container.parent().find(".k-window-title").text(i18n.t(vi18n_Name + '.Detail'));
                $('body').i18n();//多國語系文字替換           
            },
        }).data("kendoGrid");
        setRowButtonTooltip("grid", ".k-grid-edit", i18n.t(vi18n_Name + ".Data"));
        setRowButtonTooltip("grid", ".crud_send", i18n.t(vi18n_Name + ".Send"));
    }
    
   
    function ddlEventBaseName_Data() {
        var getEventBaseName = new kendo.data.DataSource({
            transport: {//下拉選單資料讀取
                read: {
                    url: WebApiUrl_IPMComm + "/GetEventBase",
                    async: false,
                    dataType: "json",
                    type: "Post"
                },
                parameterMap: function (options, operation) {//狀態判斷，非讀取則指定模型之狀態
                    oDataModels_Edit["MODIFYUSER"] = MODIFYUSER;
                    oDataModels_Edit["CompanyID"] = CompanyID;
                    oDataModels_Edit["FactoryID"] = FactoryID;
                    return oDataModels_Edit;
                }
            },
            schema: {
                parse: function (data) {
                    //失敗
                    if (data.length == 1) {
                        if (data[0].ReturnCode != 0) {
                            return [];
                        }
                    }
                    else {
                        //失敗
                        if (data[1].ReturnCode != 0) {
                            return [];
                        }
                        //成功
                        else {
                            return data[0];
                        }
                    }
                }
            }
        });
        return getEventBaseName;
    }
    function setRowButtonTooltip(gridID, btn_cl, btn_tooltip) {
        $("#" + gridID).kendoTooltip({
            filter: btn_cl,
            content: btn_tooltip
        });
    }

@* --------------------------------------------------------------邏輯區-------------------------------------------------------------- *@
    // Function called by the read command
    function readGrid() {
        $("#grid").data("kendoGrid").dataSource.read(); // 重新整理數據
        $("#grid").data("kendoGrid").dataSource.page(1); // 定位到第一頁
    }

 
    function getHeight(element) {
        // 先嘗試獲取元素自身的高度
        var height = element.offsetHeight;

        // 如果元素自身高度為0，則繼續向上尋找父元素的高度
        if (height === 0) {
            var parent = element.parentElement;
            while (parent && parent.offsetHeight === 0) {
                parent = parent.parentElement;
            }
            if (parent) {
                height = parent.offsetHeight;
            }
        }
        return height;
    }

    //發送通知事件
    function SendNotify(e) {
        var SelectItem;
        //取得該列資料
        if (e) {
            var grid = $("#grid").data("kendoGrid");
            SelectItem = grid.dataItem($(e).closest("tr"));
        }
        if (SelectItem) {
            if (SelectItem.NotifiedStatus == "已通知") {
                FtcAlert("已發送通知");
            }
            else {
                var vEventSysId = SelectItem.EventSysId;
                var vNotified = SelectItem.Notified;
                $.ajax({
                    url: WebApiUrl_Comm + "/UpdEventNotifyTransDetail",
                    type: 'Post',
                    dataType: 'json',
                    data: {            
                        CompanyID: CompanyID,
                        FactoryID: FactoryID,
                        MODIFYUSER: MODIFYUSER,
                        RULEs: {
                            EventSysId: vEventSysId,
                            Notified: vNotified
                        }
                    },
                    async: false,
                    //Ajax請求成功時要執行的函式
                    success: function (ResultData) {
                        if (ResultData.length == 1) {
                            //執行失敗
                            if (ResultData[0].ReturnCode != 0) {
                                FtcAlert(ResultData[0].ReturnMessage);
                                return [];
                            }
                            //執行成功
                            else {
                                remoteDataSource.read();
                            }
                        }                
                    }
                });
            }
        }
    }

    //編輯事件
    function SetMainData(e) {
        var gridSelect_Data;
        //編輯模式
        //取得該列資料
        if (e) {
            gridSelect_Data = this.dataItem($(e.target).closest("tr"));
        }
        //顯示該列資料
        if (gridSelect_Data) {
            $("#ENTEventBaseName").val(gridSelect_Data.EventBaseName);
            $("#ENTCreateDate").val(kendo.toString(gridSelect_Data.CreateDate, "yyyy/MM/dd HH:mm:ss"));
            $("#ENTNotifiedStatus").val(gridSelect_Data.NotifiedStatus);
            $("#ENTNotifyGroup").val(gridSelect_Data.NotifyGroup);
            $("#ENTNotifyMethod").val(gridSelect_Data.NotifyMethod);
            $("#ENTModifyDate").val(kendo.toString(gridSelect_Data.ModifyDate, "yyyy/MM/dd HH:mm:ss"));           
        }
        $("div.k-edit-buttons.k-state-default").hide();
    }
</script>